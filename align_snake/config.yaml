## Configuration for the STARsolo_10x Snakemake workflow.

########################################################################################################
# Run settings
########################################################################################################
#TODO: re-write sample sheet formatting, parsing, etc.
# Sample sheet requires a sampleID, and locations of fastqs for R1 and R2
#     For multi-lane inputs, use the following format (from STARsolo github page):
#       --readFilesIn Read2_Lane1.fastq.gz,Read2_Lane2.fastq.gz,Read2_Lane3.fastq.gz  Read1_Lane1.fastq.gz,Read1_Lane2.fastq.gz,Read1_Lane3.fastq.gz

## ~~~~~ sample sheets ~~~~~
SAMPLE_SHEET: /workdir/dwm269/scMuscle2/scMuscle2_metadata_v1-0.csv


# STARsolo parameters
CORES_HI: 36 # how many cores to give for each process (snakemake automatically parallelizes process using "snakemake -j  {numTotalCores}")
CORES_LO: 4
MEMLIMIT: 32000000000 # limit in bytes
UMIlen: 12 #v2=__, v3=12, visium=12

## Cell Barcode white lists
CB_WHITELIST: resources/barcodes_10x/3M-february-2018.txt # path to cell barcodes (CB) whitelist, gunzipped (without the .gz extension) - https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-

########################################################################################################
# Important directory file paths
########################################################################################################

TMPDIR: /workdir/dwm269/scMuscle2/tmp
OUTDIR: /workdir/dwm269/scMuscle2/data
REFDIR: /workdir/dwm269/scMuscle2/refs
# DATADIR: /workdir/dwm269/scMuscle2/fastqs

########################################################################################################
# Executables - file paths
########################################################################################################
#TODO - add umi_tools, etc
STAR_EXEC: STAR #v2.7.10a
FASTQC_EXEC: fastqc
GGET_EXEC: gget
# BAM2SPLITBW: /home/dwm269/DWM_utils/seq_utils/bam2splitBigWig.sh #Custom function in DWM_utils that splits a bam file by strand and converts it into bigwig format
# FASTX_COLLAPSER: fastx_collapser
# BLASTDB: /shared_data/genome_db/BLAST_NCBI # path to where the nt BLAST database is stored
# PICARD_EXEC: /home/dwm269/miniconda3/envs/STARsolo/share/picard-2.26.10-0/picard.jar
